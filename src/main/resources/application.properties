quarkus.http.port=${PORT:8080}
quarkus.package.type=uber-jar
quarkus.http.host=0.0.0.0
quarkus.datasource.db-kind=postgresql
#quarkus.datasource.jdbc.driver=org.postgresql.Driver

#quarkus.datasource.username=postgres
#quarkus.datasource.password=joellungu
#quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/postgres

#password::f8f66e5c2f380b7dadb2943959687e6b6c5baf2f44eec7f028e6a5e3acb0ecf3
#user::hdjdavgerbrhwh
#database::d16ufjtdkl3718

quarkus.datasource.jdbc.url=${JDBC_DATABASE_URL}
quarkus.datasource.username=${JDBC_DATABASE_USERNAME}
quarkus.datasource.password=${JDBC_DATABASE_PASSWORD}


#port::5432
#host::ec2-3-219-19-205.compute-1.amazonaws.com
#quarkus.datasource.jdbc.url=jdbc:postgresql://bqlujt3tbffdu10fdgql-postgresql.services.clever-cloud.com:5434/bqlujt3tbffdu10fdgql
#quarkus.datasource.jdbc.max-size=2

quarkus.http.limits.max-body-size=100M
#quarkus.http.limits.max-form-attribute-size=500M
#drop and create the database at startup (use `drop-and-create --update` to only update the schema)
quarkus.hibernate-orm.database.generation = update
#quarkus.rest-client."org.epst.beans.MultipartService".url=https://epst.herokuapp.com/

quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET,POST,PUT,DELETE
quarkus.http.cors.headers=accept,authorization,content-type,x-requested-with

csv.file.path=data/Resultat_Global_2008.csv